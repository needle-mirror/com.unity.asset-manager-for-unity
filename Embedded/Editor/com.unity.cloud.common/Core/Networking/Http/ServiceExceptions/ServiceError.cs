using System;
using System.Net;

namespace Unity.Cloud.CommonEmbedded
{
    /// <summary>
    /// Represents an error returned by a service. Defined in https://services.docs.unity.com/docs/errors/index.html#error-attributes.
    /// </summary>
    [Serializable]
    class ServiceError
    {
        /// <summary>
        /// A short summary of the problem type.
        /// </summary>
        public string Title { get; set; } = "";

        /// <summary>
        /// The universally unique identifier (UUID) of your request.
        /// </summary>
        public string RequestId { get; set; } = "";

        /// <summary>
        /// A message providing more details about the error returned.
        /// </summary>
        public string Detail { get; set; } = "";

        /// <summary>
        /// An array of additional errors.
        /// </summary>
        public object[] Details { get; set; } = null;

        /// <summary>
        /// A number that identifies the error returned.
        /// </summary>
        public ServiceErrorCode Code { get; set; } = 0;

        /// <summary>
        /// A status code generated by the server.
        /// </summary>
        public HttpStatusCode Status { get; set; } = 0;

        /// <summary>
        /// Returns a link to the documentation with more information.
        /// </summary>
        public string Type { get; set; } = "";

        /// <inheritdoc/>
        public override string ToString()
        {
            var stringBuilder = new System.Text.StringBuilder("ServiceError { ");

            var prependComma = false;
            prependComma = AppendField(nameof(Title), Title);
            prependComma = AppendField(nameof(Detail), Detail);
            prependComma = AppendField(nameof(Code), Code.ToString());
            prependComma = AppendField(nameof(Status), Status.ToString());
            AppendField(nameof(Type), Type);

            stringBuilder.Append(" }");

            return stringBuilder.ToString();

            bool AppendField(string name, string value)
            {
                if (!string.IsNullOrEmpty(value))
                {
                    if (prependComma)
                        stringBuilder.Append(", ");
                    stringBuilder.Append($"{name}: \"{value}\"");
                    return true;
                }
                return false;
            }
        }
    }
}
